{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "e2e/tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "plugins": [
        "eslint-plugin-rxjs"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": [
              "element",
              "attribute"
            ],
            "prefix": [
              "nb",
              "ngd",
              "ngx"
            ],
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": [
              "nb",
              "ngd",
              "ngx"
            ],
            "style": "camelCase"
          }
        ],
        "semi": "off",
        "@typescript-eslint/semi": "error",
        "quotes": "off",
        "@typescript-eslint/quotes": ["error", "single"],
        "dot-notation": "off",
        "@typescript-eslint/dot-notation": "error",
        "brace-style": "off",
        "@typescript-eslint/brace-style": ["error", "1tbs"],
        "comma-dangle": "off",
        "@typescript-eslint/comma-dangle": [
          "error",
          "always-multiline"
        ],
        "indent": "off",
        "@typescript-eslint/indent": ["error", 2],
        "max-len": [
          "error",
          {
            "code": 120
          }
        ],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "no-underscore-dangle": "off",
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "overrides": {
              "typeLiteral": {
                "singleline": {
                  "delimiter": "comma"
                }
              }
            }
          }
        ],
        "rxjs/no-unsafe-takeuntil": [
          "error",
          {
            "allow": [
              "count",
              "defaultIfEmpty",
              "endWith",
              "every",
              "finalize",
              "finally",
              "isEmpty",
              "last",
              "max",
              "min",
              "publish",
              "publishBehavior",
              "publishLast",
              "publishReplay",
              "reduce",
              "share",
              "shareReplay",
              "skipLast",
              "takeLast",
              "throwIfEmpty",
              "toArray"
            ]
          }
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}
