/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */

$nb-themes: () !global;
$nb-themes-export: () !global;
$nb-enabled-themes: () !global;

@function nb-get-enabled-themes() {

  @if (length($nb-enabled-themes) == 0) {
    @each $theme-name, $theme in $nb-themes {
      $nb-enabled-themes: append($nb-enabled-themes, $theme-name) !global;
    }
  }
  @return $nb-enabled-themes;
}

@function nb-set-for-export($theme, $name, $default: null) {
  $theme-data: (
    data: $theme,
    parent: $default,
  );
  @return map-set($nb-themes-export, $name, $theme-data);
}

@function nb-get-registered-theme($name) {
  $theme: map-get($nb-themes, $name);

  // TODO: check if optimal place
  @if ($theme == null) {
    @error 'Nebular Theme: theme `' + $name + '` is not registered with `nb-register-theme` function.';
  }

  @return $theme;
}

@function nb-register-theme($theme, $name, $default: null) {

  $theme-data: ();

  @if ($default != null) {
    $default-theme: map-get($nb-themes, $default);
    $theme: map-merge($default-theme, $theme);
  }
  $nb-themes: map-set($nb-themes, $name, $theme) !global;
  $nb-themes-export: nb-set-for-export($theme, $name, $default) !global;

  @return $nb-themes;
}

@function nb-deep-find-value($theme, $key, $value) {
  $parent-value: map-get($theme, $value);

  @if ($parent-value != null) {
    @return nb-deep-find-value($theme, $value, $parent-value);
  }

  @return $value;
}

@function nb-process-theme($theme) {
  $processed-theme: ();
  @each $key, $value in $theme {
    $processed-theme: map-set($processed-theme, $key, nb-deep-find-value($theme, $key, $value));
  }
  @return $processed-theme;
}

@function nb-theme($key) {

  $value: ();

  // in case of css custom properties - just returns var(--var-name) - the rest is a browser job
  @if ($nb-theme-process-mode == null) {
    // there is no way to check if variable exists as current execution context is outside of particular theme
    // because we process css in this mode only once! (and not for each theme)
    $value: var(--#{$key});
  }

  // in a preprocess mode (nb-install-global call) get ready value from $nb-processed-theme variable
  @if ($nb-theme-process-mode == 'pre-process') {
    $value: map-get($nb-processed-theme, $key);

    // otherwise lazily search for variable value
  }
  @if ($nb-theme-process-mode == 'lazy-process') {
    $theme: nb-get-registered-theme($nb-current-theme-name);
    $value: nb-deep-find-value($theme, $key, map-get($theme, $key));
  }

  @if ($value == null) {
    @error 'Nebular Theme: `nb-theme()` cannot find value for key `' + $key + '`';
  }

  @return $value;
}
